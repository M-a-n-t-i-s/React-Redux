{"version":3,"file":"static/js/672.e10cfd0e.chunk.js","mappings":"wKACA,G,QAA0B,0BAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA4I,0BAA5I,EAAoL,6BAApL,EAA0N,wBAA1N,EAA8P,2BAA9P,EAAmS,yBAAnS,EAA8U,iC,mBCU9U,EAPmB,SAACA,GAChB,OAAO,iBAAKC,UAAWC,EAAY,IAAMA,EAAS,WAC9C,gBAAKC,IAAI,8EACT,SAAC,KAAO,CAACC,GAAI,YAAcJ,EAAMK,GAAG,SAAEL,EAAMM,SAEpD,ECOA,EAVgB,SAACN,GAEb,OAAe,IAAXA,EAAMK,IACC,gBAAKJ,UAAWC,EAAS,UAAC,gBAAKD,UAAWC,EAAU,IAAIA,EAAc,SAAEF,EAAMO,aAE7E,gBAAKN,UAAWC,EAAY,UAAC,gBAAKD,UAAWC,EAAU,IAAIA,EAAc,SAAEF,EAAMO,WAEjG,E,iDCmCIC,GAAcC,EAAAA,EAAAA,GAAiB,KAY7BC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAK,yBAAhBD,EAVL,SAACX,GACpB,OAAQ,iBAAMa,SAAUb,EAAMc,aAAa,UACvC,iBAAKb,UAAWC,EAAkB,WAClC,SAACa,EAAA,EAAK,CAACT,KAAM,oBAAqBU,UAAWC,EAAAA,GAAWC,SAAU,CAACC,EAAAA,EAAUX,GAAeY,YAAY,wBAExG,4BAAQ,aAIhB,IAEA,EAjDgB,SAACpB,GACb,IAAIqB,EAAQrB,EAAMsB,YACdC,EAAkBF,EAAMG,YACvBC,KAAI,SAAAC,GAAM,OAAI,SAAC,EAAU,CAACpB,KAAMoB,EAAOpB,KAAMD,GAAIqB,EAAOrB,IAASqB,EAAOrB,GAAK,IAE9EsB,EAAmBN,EAAMO,aACxBH,KAAI,SAAAI,GAAI,OAAI,SAAC,EAAO,CAAC5B,UAAWC,EAAWK,QAASsB,EAAKtB,QAAuBF,GAAIwB,EAAKxB,IAAlBwB,EAAKxB,GAAkB,IAanG,OAAKL,EAAM8B,QAGP,iBAAK7B,UAAWC,EAAU,WACtB,gBAAKD,UAAWC,EAAe,SAC1BqB,KAEL,iBAAKtB,UAAWC,EAAW,UACtByB,GACD,SAACjB,EAAmB,CAACG,SAZb,SAACkB,GACjB/B,EAAMgC,eAAeD,EAAOE,kBAChC,QAYQ,uBAXoB,SAAC,KAAQ,CAAC7B,GAAG,UAe7C,E,8BCdA,IAP4B8B,EAAAA,EAAAA,GAAiBC,IAO9BC,EAAAA,EAAAA,UACXC,EAAAA,EAAAA,KApBkB,SAAChB,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE3B,IACuB,SAACgB,GACpB,MAAO,CACHN,eAAgB,SAACO,GACbD,GAASE,EAAAA,EAAAA,GAA4BD,GACzC,EAER,IAUIL,EAAAA,EAFJ,CAGEC,G","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__NRDAA\",\"dialogsItems\":\"Dialogs_dialogsItems__7ypPV\",\"active\":\"Dialogs_active__oKHYx\",\"messages\":\"Dialogs_messages__OE2GA\",\"messageMain\":\"Dialogs_messageMain__YBCtg\",\"sender\":\"Dialogs_sender__u5rw6\",\"recipient\":\"Dialogs_recipient__pEPFJ\",\"message\":\"Dialogs_message__ZJdwe\",\"newMessageField\":\"Dialogs_newMessageField__SAMwl\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return <div className={s.dialogs + ' ' + s.active}>\r\n        <img src='https://cs7.pikabu.ru/post_img/big/2019/03/26/11/1553625291161446207.jpg' />\r\n        <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    if (props.id===1)\r\n        return <div className={s.sender}><div className={s.dialogs+' '+s.messageMain}>{props.message}</div></div>\r\n    else\r\n         return <div className={s.recipient}><div className={s.dialogs+' '+s.messageMain}>{props.message}</div></div>\r\n\r\n}\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport '../../index.js';\r\nimport {Navigate, useNavigate} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage\r\n    let dialogsElements = state.dialogsData\r\n        .map(dialog => <DialogItem name={dialog.name} id={dialog.id} key={dialog.id}/>);\r\n\r\n    let messagesElements = state.messagesData\r\n        .map(mess => <Message className={s.message} message={mess.message} key={mess.id} id={mess.id}/>);\r\n    // let newMessageElement = React.createRef();\r\n\r\n    // let onSentNewMessage = () => {\r\n    //\r\n    //     let text = newMessageElement.current.value;\r\n    //     props.sentNewMessage(text);\r\n    //     newMessageElement.current.value = '';\r\n    //\r\n    // }\r\n    let addNewMessage = (values) => {\r\n        props.sentNewMessage(values.newMessageElement);\r\n    }\r\n    if (!props.isAuth)  return  <Navigate to=\"/login\"/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n            <div></div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nlet maxLength100 =maxLengthCreator(100)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return  <form onSubmit={props.handleSubmit}>\r\n        <div className={s.newMessageField}>\r\n        <Field name={\"newMessageElement\"} component={Textarea}  validate={[required, maxLength100]} placeholder='Enter your message'/>\r\n        {/*<Field name={\"newMessageElement\"} component={\"textarea\"} ref={newMessageElement} placeholder='Enter your message'></Field>*/}\r\n        <button>Sent</button>\r\n    </div>\r\n    </form>\r\n\r\n}\r\nconst AddMessageFormRedux = reduxForm({form:\"dialogAddMessageForm \"})(AddMessageForm)\r\nexport default Dialogs;","\r\nimport '../../index.js';\r\nimport {sentNewMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {withAuthNavigate} from \"../../hoc/withAuthNavigate\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet  mapDispatchProps =(dispatch)=> {\r\n    return {\r\n        sentNewMessage: (text)=>{\r\n            dispatch(sentNewMessageActionCreator(text))\r\n        }\r\n    }\r\n}\r\nlet AuthNavigateComponent = withAuthNavigate(Dialogs);\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchProps),\r\n    withAuthNavigate\r\n)(Dialogs);"],"names":["props","className","s","src","to","id","name","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogsData","map","dialog","messagesElements","messagesData","mess","isAuth","values","sentNewMessage","newMessageElement","withAuthNavigate","Dialogs","compose","connect","dispatch","text","sentNewMessageActionCreator"],"sourceRoot":""}